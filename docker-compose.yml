version: '3.8'

services:
  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_START_RPC=true
    volumes:
      - cassandra_data:/var/lib/cassandra

  janusgraph:
    image: janusgraph/janusgraph:latest
    container_name: janusgraph
    ports:
      - "8182:8182" # Gremlin Server
    depends_on:
      - cassandra
    volumes:
      - janusgraph_data:/var/lib/janusgraph

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  # app:
  #   build: ./app
  #   container_name: janus-app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - janusgraph
  #   environment:
  #     - NODE_ENV=development
  #     - KAFKA_MODE=docker
  #   volumes:
  #     - ./app:/usr/src/app

volumes:
  cassandra_data:
  janusgraph_data:
